{"ast":null,"code":"var _jsxFileName = \"/Users/user/react-js-learning/src/components/PokemonCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PokemonCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = ({\n  pokemon,\n  borderColor = '#009688'\n}) => {\n  _s();\n  const [color, updateColor] = useState();\n\n  //fonction pour afficher la bordure lors du passage de la souris.\n  const showBorder = () => {\n    updateColor(borderColor);\n  };\n\n  //fonction pour enlever la bordure lorsqu'on enleve la souris.\n  const hideBorder = () => {\n    updateColor('#f5f5f5');\n  };\n\n  //fonction pour formater l'affichage de la date.\n  const formatDate = date => {\n    var finalMonth = '';\n    if (date.getMonth() < 10) {\n      let month;\n      month = date.getMonth() + 1;\n      finalMonth = '0' + month;\n    }\n    console.log(finalMonth);\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n  const formatType = type => {\n    let color;\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n      default:\n        color = 'grey';\n        break;\n    }\n    return `chip ${color}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" \", type, \" \"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonCard, \"Kzrg//n6bjp74RPcsCXkWPLpqyE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PokemonCard","pokemon","borderColor","_s","color","updateColor","showBorder","hideBorder","formatDate","date","finalMonth","getMonth","month","console","log","getDate","getFullYear","formatType","type","className","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","_c","$RefreshReg$"],"sources":["/Users/user/react-js-learning/src/components/PokemonCard.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './PokemonCard.css';\n\ntype Props = {\n  pokemon: Pokemon;\n  borderColor?: string;\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({ pokemon, borderColor= '#009688' }) => {\n    \n    const[color, updateColor] = useState<string>();\n\n    //fonction pour afficher la bordure lors du passage de la souris.\n    const showBorder = () => {\n        updateColor(borderColor);\n    }\n\n    //fonction pour enlever la bordure lorsqu'on enleve la souris.\n    const hideBorder = () => {\n        updateColor('#f5f5f5');\n    }\n\n    //fonction pour formater l'affichage de la date.\n    const formatDate = (date: Date): string => {\n        var finalMonth: string = '';\n        if (date.getMonth() < 10) {\n            let month: number;\n            month = date.getMonth() + 1;\n            finalMonth = '0' + month;\n            \n        }\n        console.log(finalMonth);\n        return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    }\n\n    const formatType = (type: string): string => {\n        let color: string;\n       \n        switch (type) {\n          case 'Feu': \n            color = 'red lighten-1'; \n            break; \n          case 'Eau': \n            color = 'blue lighten-1'; \n            break; \n          case 'Plante': \n            color = 'green lighten-1'; \n            break; \n          case 'Insecte': \n            color = 'brown lighten-1'; \n            break; \n          case 'Normal': \n            color = 'grey lighten-3'; \n            break; \n          case 'Vol': \n            color = 'blue lighten-3'; \n            break; \n          case 'Poison': \n            color = 'deep-purple accent-1'; \n            break; \n          case 'Fée': \n            color = 'pink lighten-4'; \n            break; \n          case 'Psy': \n            color = 'deep-purple darken-2'; \n            break; \n          case 'Electrik': \n            color = 'lime accent-1'; \n            break; \n          case 'Combat': \n            color = 'deep-orange'; \n            break; \n          default: \n            color = 'grey'; \n            break; \n        }\n       \n        return `chip ${color}`;\n    }\n\n\n\n\n  return (\n    <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map((type) => (\n                <small key={type}> {type} </small>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \nexport default PokemonCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}